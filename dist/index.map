{"version":3,"sources":["helper.js","scene.js","index.js"],"names":["assert","name","op","client","console","log","Date","toLocaleString","key_pair","public_key_hash","operation_id","equation_fn","is_timeout","Promise","resolve","count","t","setInterval","ops","JSON","stringify","getHeadCustom","found_it","indexOf","timeout","clearInterval","Function","result","genPrice","max","Math","round","random","genTez","parseFloat","toFixed","genToken","cancelOrder","token","is_buy","price","owner","order","getOrders","filter","x","length","createBuyingOrder","tez_amount","orders","prev_tez_amount","createBuying","executeSellingOrder","prev_token_amount","token_amount","executeSelling","floor","executeBuyingOrder","executeBuying","createSellingOrder","createSelling","transferToken","receiver","sender","sender_info","getTokenInfo","receiver_info","tokenTransfer","new_sender_info","new_receiver_info","rewardLock","pkh","tes_token","tokens","TES","token_info","prev_locked","getRewardInfo","locked_amount","rewardUnlock","prev_locked_amount","token_result","reward_result","rewardWithdraw","reward_kt1","contracts","reward","prev_xtz","balance","prev_reward_xtz","reward_info","rewards","date","lock_date","reward_value","reduce","acc","xtz_amount","curr_xtz","curr_reward_xtz","depositToReward","transfer","destination","amount","parameters","transferred_xtz","roll","basicSceneComposition","clients","buying_price","_","Scene","selling_price","__","loopRandomTest","main","client1","tradebot","getApiClient","host","secret_key","client2","catch","err","Error","stack"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export const assert = (name, op, client) => {\n  if (!op)\n    throw 'Assert fail: op is empty'\n\n  console.log(`\nDate: ${(new Date()).toLocaleString()}\nAssertion: ${name}\nClient: ${client.client.key_pair.public_key_hash}\nOp: ${op.operation_id}`)\n\n  return async (equation_fn) => {\n    let is_timeout = false\n    await new Promise(resolve => {\n      let count = 0\n      const t = setInterval(async () => {\n        console.log('Checking operation_hashes...round ' + count)\n        const ops = JSON.stringify(await client.getHeadCustom('/operation_hashes'))\n        count++\n        const found_it = ops.indexOf(op.operation_id) > -1\n        const timeout = count >= 20\n        if (timeout) is_timeout = true\n\n        if (found_it || timeout) {\n          console.log(`\\x1b[${found_it ? 32 : 31}m%s\\x1b[0m`, found_it ? 'Op found' : 'Timeout')\n          clearInterval(t)\n          resolve()\n        }\n      }, 15 * 1000)\n    })\n\n    if (equation_fn instanceof Function) {\n      console.log('Checking equation...')\n      const result = await equation_fn()\n      console.log(`\\x1b[${result ? 32 : 31}m%s\\x1b[0m`, result ? 'PASS' : 'FAIL')\n\n      if (!result && !is_timeout)\n        throw `Assert fail [${name}]` \n    }\n  }\n}","import { assert } from './helper'\n\nconst genPrice = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nconst genTez = (max = 5) => {\n  return parseFloat((Math.random() * max).toFixed(6))\n}\n\nconst genToken = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nexport const cancelOrder = async ({client, token, is_buy, price}) => {\n  const owner = client.client.key_pair.public_key_hash\n  const op = await client.cancelOrder(token, is_buy, price)\n  await assert('Cancel order', op, client)(async () => {\n    console.log(is_buy, price, owner)\n    const order = (await client.getOrders()).filter(x => x.is_buy == is_buy && x.price == price && x.owner == owner)\n    return !order.length\n  })\n}\n\nexport const createBuyingOrder = async ({client, token, price, tez_amount}) => {\n  price = price || genPrice()\n  tez_amount = tez_amount || genTez()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == true && x.owner == owner && x.price == price)[0]\n  const prev_tez_amount = order ? +order.tez_amount : 0\n\n  const op = await client.createBuying(token, price, tez_amount)\n  await assert('Create buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    console.log(price, tez_amount, prev_tez_amount, order.tez_amount)\n    return order.tez_amount == (Math.round(tez_amount * 1000000) + prev_tez_amount)\n  })\n\n  return [price, tez_amount]\n}\n\nexport const executeSellingOrder = async ({client, token, price, owner, tez_amount}) => {\n  const orders = await client.getOrders()\n  let prev_token_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == false)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_token_amount = order.token_amount\n    } else {\n      throw 'No selling order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_token_amount = order.token_amount\n    else \n      throw 'No such selling order'\n  }\n\n  tez_amount = tez_amount || genTez(price * prev_token_amount / 1000000)\n\n  const op = await client.executeSelling(token, price, owner, tez_amount)\n  await assert('Execute selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    console.log(prev_token_amount, order)\n    return Math.floor((tez_amount * 1000000) / price) == prev_token_amount - order.token_amount\n  })\n\n  return [price, owner, prev_token_amount, tez_amount]\n}\n\nexport const executeBuyingOrder = async ({client, token, price, owner, token_amount}) => {\n  const orders = await client.getOrders()\n  let prev_tez_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == true)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_tez_amount = order.tez_amount\n    } else {\n      throw 'No buying order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_tez_amount = order.tez_amount\n    else \n      throw 'No such buying order'\n  }\n\n  token_amount = token_amount || genToken(prev_tez_amount / price)\n\n  const op = await client.executeBuying(token, price, owner, token_amount)\n  await assert('Execute buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    console.log(prev_tez_amount, order)\n    return price * token_amount == prev_tez_amount - order.tez_amount\n  })\n\n  return [price, owner, prev_tez_amount, token_amount]\n}\n\nexport const createSellingOrder = async ({client, token, price, token_amount}) => {\n  price = price || genPrice()\n  token_amount = token_amount || genToken()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == false && x.owner == owner && x.price == price)[0]\n  const prev_token_amount = order ? +order.token_amount : 0\n\n  const op = await client.createSelling(token, price, token_amount)\n  await assert('Create selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    console.log(price, prev_token_amount, token_amount, order.token_amount)\n    return order.token_amount == (prev_token_amount + token_amount)\n  })\n\n  return [price, token_amount]\n}\n\nexport const transferToken = async ({client, token, receiver, token_amount}) => {\n  const sender = client.client.key_pair.public_key_hash\n  receiver = receiver ? receiver.client.key_pair.public_key_hash : sender\n  token_amount = token_amount || genToken()\n\n  const sender_info = await client.getTokenInfo(token, sender)\n  const receiver_info = await client.getTokenInfo(token, receiver)\n\n  const op = await client.tokenTransfer(token, receiver, token_amount)\n  await assert('Transfer token', op, client)(async () => {\n    const new_sender_info = await client.getTokenInfo(token, sender)\n    const new_receiver_info = await client.getTokenInfo(token, receiver)\n\n    if (receiver === sender) {\n      return sender_info.token_amount == receiver_info.token_amount &&\n             sender_info.token_amount == new_sender_info.token_amount &&\n             new_sender_info.token_amount == new_receiver_info.token_amount\n    } else {\n      console.log(sender_info.token_amount, new_sender_info.token_amount,\n             new_receiver_info.token_amount, receiver_info.token_amount)\n      return sender_info.token_amount - new_sender_info.token_amount == \n             new_receiver_info.token_amount - receiver_info.token_amount\n    }\n  })\n\n  return token_amount\n}\n\nexport const rewardLock = async ({client, token_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const token_info = await client.getTokenInfo(tes_token, pkh)\n  const prev_locked = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  token_amount = token_amount || genToken(token_info.token_amount)\n\n  const op = await client.rewardLock(token_amount)\n  await assert('Lock reward', op, client)(async () => {\n    const locked_amount = (await client.getRewardInfo(pkh)).locked_amount\n    console.log(locked_amount, prev_locked, token_amount)\n    return locked_amount == +prev_locked + token_amount\n  })\n\n  return token_amount\n}\n\nexport const rewardUnlock = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const prev_token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n  const prev_locked_amount = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  const op = await client.rewardUnlock()\n  await assert('Unlock reward', op, client)(async () => {\n    const token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n    const token_result = token_amount == +prev_locked_amount + +prev_token_amount\n    const locked_amount = (await client.getRewardInfo(pkh)).locked_amount\n    const reward_result =  (locked_amount || 0) == 0\n    console.log(token_amount, locked_amount, prev_token_amount, prev_locked_amount, locked_amount)\n    return token_result && reward_result\n  })\n}\n\nexport const rewardWithdraw = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const reward_kt1 = client.contracts.reward\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n  const reward_info = await client.getRewardInfo(pkh)\n  const locked_amount = reward_info.locked_amount || 0\n  const rewards = reward_info.rewards.filter(x => x.date > reward_info.lock_date)\n  const reward_value = rewards.reduce((acc, x) => Math.floor(locked_amount * x.xtz_amount / 100000000) + acc, 0)\n\n  const op = await client.rewardWithdraw()\n  await assert('Withdraw reward', op, client)(async () => {\n    const curr_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    console.log(curr_xtz, prev_xtz, reward_value, curr_reward_xtz, prev_reward_xtz, reward_value)\n    return curr_xtz == +prev_xtz + reward_value && curr_reward_xtz == +prev_reward_xtz - reward_value\n  })\n}\n\nexport const depositToReward = async ({client, xtz_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const reward_kt1 = client.contracts.reward\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n\n  xtz_amount = xtz_amount || genTez(+prev_xtz / 10 / 1000000)\n  const op = await client.client.transfer({\n    destination: reward_kt1,\n    amount: xtz_amount,\n    parameters: {\n      \"bytes\": \"050505030b\"\n    }\n  })\n  await assert('Deposit to reward contract', op, client)(async () => {\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    const transferred_xtz = Math.round(xtz_amount * 1000000)\n    console.log(curr_reward_xtz, prev_reward_xtz, transferred_xtz)\n    return curr_reward_xtz == +prev_reward_xtz + transferred_xtz\n  })\n}\n\nexport default {\n  createBuyingOrder,\n  createSellingOrder,\n  executeBuyingOrder,\n  executeSellingOrder,\n  cancelOrder,\n  rewardLock,\n  rewardUnlock,\n  rewardWithdraw,\n  depositToReward,\n  transferToken\n}\n\n  // if (1) {\n  //   // const op = await client1.createBuying(tes_token, 210, 1)\n  //   // const op = await client1.createSelling(tes_token, 342, 100)\n  //   // const op = await client1.executeSelling(tes_token, 231, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 342 * 100 / 1000000)\n  //   const op = await client1.executeBuying(tes_token, 210, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 100)\n  //   // const op = await client1.cancelOrder(tes_token, false, 342)\n  //   // const op = await client1.rewardLock(1000)\n  //   // const op = await client1.rewardUnlock()\n  //   // const op = await client1.rewardWithdraw()\n  //   // const op = await client1.tokenTransfer(tes_token, tes_token, 300)\n  //   console.log(op)\n  // } else {\n  //   // const result = await client1.getTokenInfo(tes_token, pkh)\n  //   // const result = await client1.getOrders()\n  //   // const result = await client1.getRewardInfo(pkh)\n  //   const result = await client1.getHeadCustom('/operation_hashes')\n  //   console.log(result)\n  // }","import tradebot from 'tezexchange-tradebot'\nimport Scene from './scene'\n\nconst roll = () => {\n  return Math.random() > 0.5\n}\n\nconst basicSceneComposition = async ({clients, tes_token}) => {\n  const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n  const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n  await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n  await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n  await Scene.transferToken({client: clients[0], token: tes_token})\n  await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n  await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n  await Scene.rewardLock({client: clients[0]})\n  await Scene.depositToReward({client: clients[0]})\n  await Scene.rewardWithdraw({client: clients[0]})\n  await Scene.rewardUnlock({client: clients[0]})\n}\n\nconst loopRandomTest = async ({clients, tes_token}) => {\n  while (true) {\n    if (roll()) {\n      const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n      if (roll())\n        await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n    }\n    if (roll()) {\n      const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n      if (roll())\n        await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[0], receiver: clients[1], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[1], receiver: clients[0], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.rewardLock({client: clients[0]})\n      if (roll()){\n        await Scene.depositToReward({client: clients[0]})\n        await Scene.rewardWithdraw({client: clients[0]})\n      }\n      else\n        await Scene.rewardUnlock({client: clients[0]})\n    }\n  }\n}\n\nconst main = async () => {\n  const client1 = await tradebot.getApiClient({\n    host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskS5JQ4H6YzSN1BXttrXKvdBBZGdQvpkATXEErUHJuGLxDevHpdCVenc4b5tQUWUmqyPNyqa911YrUmNcp88yPubFxYnKdAY'\n  })\n  const client2 = await tradebot.getApiClient({\n    host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskSAdL2Gdc7uMkvGZo5mm2CCzkDofWnwnvbSJbrTPzESaZTruCM8XHanMEUrJygUYaqS7NCFZ9dku4uZVbNAWUgQJZRV7NHj'\n  })\n\n  const tes_token = client1.tokens.TES\n\n  // await basicSceneComposition({\n  //   clients: [client1, client2],\n  //   tes_token\n  // })\n\n  await loopRandomTest({\n    clients: [client1, client2],\n    tes_token\n  })\n  \n  console.log('Finish!')\n}\n\nmain().catch(err => {\n  console.log(`\\x1b[31m%s\\x1b[0m`, 'ERR: ' + (err instanceof Error ? err.stack : JSON.stringify(err, null, 2)))\n})\n"]}