{"version":3,"sources":["helper.js","scene.js","index.js"],"names":["assert","name","op","client","console","log","key_pair","public_key_hash","operation_id","equation_fn","Promise","resolve","count","t","setInterval","ops","JSON","stringify","getHeadCustom","found_it","indexOf","timeout","clearInterval","Function","result","genPrice","max","Math","round","random","genTez","parseFloat","toFixed","genToken","cancelOrder","token","is_buy","price","owner","order","getOrders","filter","x","length","createBuyingOrder","tez_amount","createBuying","executeSellingOrder","orders","prev_token_amount","token_amount","executeSelling","floor","executeBuyingOrder","prev_tez_amount","executeBuying","createSellingOrder","createSelling","transferToken","receiver","sender","sender_info","getTokenInfo","receiver_info","tokenTransfer","new_sender_info","new_receiver_info","rewardLock","pkh","tes_token","tokens","TES","token_info","prev_locked","getRewardInfo","locked_amount","rewardUnlock","token_result","reward_result","rewardWithdraw","reward_kt1","contracts","reward","prev_xtz","balance","prev_reward_xtz","reward_info","rewards","date","lock_date","reward_value","reduce","acc","xtz_amount","curr_xtz","curr_reward_xtz","depositToReward","transfer","destination","amount","parameters","transferred_xtz","basicSceneComposition","clients","Scene","main","client1","tradebot","getApiClient","secret_key","client2","catch","err","Error"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export const assert = (name, op, client) => {\n  if (!op)\n    throw 'Assert fail: op is empty'\n\n  console.log(`\nAssertion: ${name}\nClient: ${client.client.key_pair.public_key_hash}\nOp: ${op.operation_id}`)\n\n  return async (equation_fn) => {\n    await new Promise(resolve => {\n      let count = 0\n      const t = setInterval(async () => {\n        console.log('Checking operation_hashes...round ' + count)\n        const ops = JSON.stringify(await client.getHeadCustom('/operation_hashes'))\n        count++\n        const found_it = ops.indexOf(op.operation_id) > -1\n        const timeout = count >= 5\n        if (found_it || timeout) {\n          console.log(`\\x1b[${found_it ? 32 : 31}m%s\\x1b[0m`, found_it ? 'Op found' : 'Timeout')\n          clearInterval(t)\n          resolve()\n        }\n      }, 25 * 1000)\n    })\n\n    if (equation_fn instanceof Function) {\n      console.log('Checking equation...')\n      const result = await equation_fn()\n      console.log(`\\x1b[${result ? 32 : 31}m%s\\x1b[0m`, result ? 'PASS' : 'FAIL')\n\n      if (!result)\n        throw `Assert fail [${name}]` \n    }\n  }\n}","import { assert } from './helper'\n\nconst genPrice = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nconst genTez = (max = 5) => {\n  return parseFloat((Math.random() * max).toFixed(6))\n}\n\nconst genToken = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nexport const cancelOrder = async ({client, token, is_buy, price}) => {\n  const owner = client.client.key_pair.public_key_hash\n  const op = await client.cancelOrder(token, is_buy, price)\n  await assert('Cancel order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == is_buy && x.price == price && x.owner == owner)\n    return !order.length\n  })\n}\n\nexport const createBuyingOrder = async ({client, token, price, tez_amount}) => {\n  price = price || genPrice()\n  tez_amount = tez_amount || genTez()\n\n  const op = await client.createBuying(token, price, tez_amount)\n  await assert('Create buying order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.price == price && x.tez_amount == tez_amount * 1000000).length\n  )\n\n  return [price, tez_amount]\n}\n\nexport const executeSellingOrder = async ({client, token, price, owner, tez_amount}) => {\n  const orders = await client.getOrders()\n  let prev_token_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == false)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_token_amount = order.token_amount\n    } else {\n      throw 'No selling order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    console.log(price, owner, orders)\n    const order = orders.filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_token_amount = order.token_amount\n    else \n      throw 'No such selling order'\n  }\n\n  tez_amount = tez_amount || genTez(price * prev_token_amount / 1000000)\n\n  const op = await client.executeSelling(token, price, owner, tez_amount)\n  await assert('Execute selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    return Math.floor((tez_amount * 1000000) / price) == prev_token_amount - order.token_amount\n  })\n\n  return [price, owner, prev_token_amount, tez_amount]\n}\n\nexport const executeBuyingOrder = async ({client, token, price, owner, token_amount}) => {\n  const orders = await client.getOrders()\n  let prev_tez_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == true)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_tez_amount = order.tez_amount\n    } else {\n      throw 'No buying order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_tez_amount = order.tez_amount\n    else \n      throw 'No such buying order'\n  }\n\n  token_amount = token_amount || genToken(prev_tez_amount / price)\n\n  const op = await client.executeBuying(token, price, owner, token_amount)\n  await assert('Execute buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    return price * token_amount == prev_tez_amount - order.tez_amount\n  })\n\n  return [price, owner, prev_tez_amount, token_amount]\n}\n\nexport const createSellingOrder = async ({client, token, price, token_amount}) => {\n  price = price || genPrice()\n  token_amount = token_amount || genToken()\n\n  const op = await client.createSelling(token, price, token_amount)\n  await assert('Create selling order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.price == price && x.token_amount == token_amount).length\n  )\n\n  return [price, token_amount]\n}\n\nexport const transferToken = async ({client, token, receiver, token_amount}) => {\n  const sender = client.client.key_pair.public_key_hash\n  receiver = receiver ? receiver.client.key_pair.public_key_hash : sender\n  token_amount = token_amount || genToken()\n\n  const sender_info = await client.getTokenInfo(token, sender)\n  const receiver_info = await client.getTokenInfo(token, receiver)\n\n  const op = await client.tokenTransfer(token, receiver, token_amount)\n  await assert('Transfer token', op, client)(async () => {\n    const new_sender_info = await client.getTokenInfo(token, sender)\n    const new_receiver_info = await client.getTokenInfo(token, receiver)\n\n    if (receiver === sender) {\n      return sender_info.token_amount === receiver_info.token_amount &&\n             sender_info.token_amount === new_sender_info.token_amount &&\n             new_sender_info.token_amount === new_receiver_info.token_amount\n    } else {\n      return sender_info.token_amount - new_sender_info.token_amount === \n             new_receiver_info.token_amount - receiver_info.token_amount\n    }\n  })\n\n  return token_amount\n}\n\nexport const rewardLock = async ({client, token_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const token_info = await client.getTokenInfo(tes_token, pkh)\n  const prev_locked = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  token_amount = token_amount || genToken(token_info.token_amount)\n\n  const op = await client.rewardLock(token_amount)\n  await assert('Lock reward', op, client)(async () => \n    (await client.getRewardInfo(pkh)).locked_amount == +prev_locked + token_amount\n  )\n\n  return token_amount\n}\n\nexport const rewardUnlock = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const prev_token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n  const locked_amount = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  const op = await client.rewardUnlock()\n  await assert('Unlock reward', op, client)(async () => {\n    const token_result = (await client.getTokenInfo(tes_token, pkh)).token_amount == +locked_amount + +prev_token_amount\n    const reward_result =  ((await client.getRewardInfo(pkh)).locked_amount || 0) == 0\n    return token_result && reward_result\n  })\n}\n\nexport const rewardWithdraw = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const reward_kt1 = client.contracts.reward\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n  const reward_info = await client.getRewardInfo(pkh)\n  const locked_amount = reward_info.locked_amount || 0\n  const rewards = reward_info.rewards.filter(x => x.date > reward_info.lock_date)\n  const reward_value = rewards.reduce((acc, x) => Math.floor(locked_amount * x.xtz_amount / 100000000) + acc, 0)\n\n  const op = await client.rewardWithdraw()\n  await assert('Withdraw reward', op, client)(async () => {\n    const curr_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    return curr_xtz == +prev_xtz + reward_value && curr_reward_xtz == +prev_reward_xtz - reward_value\n  })\n}\n\nexport const depositToReward = async ({client, xtz_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const reward_kt1 = client.contracts.reward\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n\n  xtz_amount = xtz_amount || genTez(+prev_xtz / 10 / 1000000)\n  const op = await client.client.transfer({\n    destination: reward_kt1,\n    amount: xtz_amount,\n    parameters: {\n      \"bytes\": \"050505030b\"\n    }\n  })\n  await assert('Deposit to reward contract', op, client)(async () => {\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    const transferred_xtz = xtz_amount * 1000000\n    return curr_reward_xtz == +prev_reward_xtz + transferred_xtz\n  })\n}\n\nexport default {\n  createBuyingOrder,\n  createSellingOrder,\n  executeBuyingOrder,\n  executeSellingOrder,\n  cancelOrder,\n  rewardLock,\n  rewardUnlock,\n  rewardWithdraw,\n  depositToReward,\n  transferToken\n}\n\n  // if (1) {\n  //   // const op = await client1.createBuying(tes_token, 210, 1)\n  //   // const op = await client1.createSelling(tes_token, 342, 100)\n  //   // const op = await client1.executeSelling(tes_token, 231, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 342 * 100 / 1000000)\n  //   const op = await client1.executeBuying(tes_token, 210, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 100)\n  //   // const op = await client1.cancelOrder(tes_token, false, 342)\n  //   // const op = await client1.rewardLock(1000)\n  //   // const op = await client1.rewardUnlock()\n  //   // const op = await client1.rewardWithdraw()\n  //   // const op = await client1.tokenTransfer(tes_token, tes_token, 300)\n  //   console.log(op)\n  // } else {\n  //   // const result = await client1.getTokenInfo(tes_token, pkh)\n  //   // const result = await client1.getOrders()\n  //   // const result = await client1.getRewardInfo(pkh)\n  //   const result = await client1.getHeadCustom('/operation_hashes')\n  //   console.log(result)\n  // }","import tradebot from 'tezexchange-tradebot'\nimport Scene from './scene'\n\nconst basicSceneComposition = async ({clients, tes_token}) => {\n  // const [price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n  // const [price, _] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n  // await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price, token: tes_token})\n  // await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price, token: tes_token})\n  // await Scene.transferToken({client: clients[0], token: tes_token})\n  // await Scene.cancelOrder({client: clients[0], token: tes_token, price, is_buy: false})\n  // await Scene.rewardLock({client: clients[0]})\n  // await Scene.rewardUnlock({client: clients[0]})\n  await Scene.depositToReward({client: clients[0]})\n  await Scene.rewardWithdraw({client: clients[0]})\n}\n\nconst main = async () => {\n  const client1 = await tradebot.getApiClient({\n    // host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskRwCM7hMRBCFuqqAwkrvyrMiRNvA5NVjN8Neg9UfT5xUpcSRJQDb8y2HgBvwAzM6Ah9d4ykZ1HgN8N426ZYrntLES5gZv79'\n  })\n  const client2 = await tradebot.getApiClient({\n    secret_key: 'edskSAnVuT9KDLx77DECAWcqocUzE4KerS7WGaUHCVyRWrYk29RHiY5gWZPVa28EPYYbZKPYg8WaSRbvahGbTCQAJFJ31JiFBu'\n  })\n\n  const tes_token = client1.tokens.TES\n\n  await basicSceneComposition({\n    clients: [client1, client2],\n    tes_token\n  })\n\n  console.log('Finish!')\n}\n\nmain().catch(err => {\n  console.log(`\\x1b[31m%s\\x1b[0m`, 'ERR: ' + (err instanceof Error ? err : JSON.stringify(err, null, 2)))\n})\n"]}