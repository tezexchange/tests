{"version":3,"sources":["helper.js","scene.js","index.js"],"names":["assert","name","op","client","console","log","Date","toLocaleString","key_pair","public_key_hash","operation_id","equation_fn","Promise","resolve","count","t","setInterval","ops","JSON","stringify","getHeadCustom","found_it","indexOf","timeout","clearInterval","Function","result","genPrice","max","Math","round","random","genTez","parseFloat","toFixed","genToken","cancelOrder","token","is_buy","price","owner","order","getOrders","filter","x","length","createBuyingOrder","tez_amount","orders","prev_tez_amount","createBuying","executeSellingOrder","prev_token_amount","token_amount","executeSelling","floor","executeBuyingOrder","executeBuying","createSellingOrder","createSelling","transferToken","receiver","sender","sender_info","getTokenInfo","receiver_info","tokenTransfer","new_sender_info","new_receiver_info","rewardLock","pkh","tes_token","tokens","TES","token_info","prev_locked","getRewardInfo","locked_amount","rewardUnlock","token_result","reward_result","rewardWithdraw","reward_kt1","contracts","reward","prev_xtz","balance","prev_reward_xtz","reward_info","rewards","date","lock_date","reward_value","reduce","acc","xtz_amount","curr_xtz","curr_reward_xtz","depositToReward","transfer","destination","amount","parameters","transferred_xtz","roll","basicSceneComposition","clients","buying_price","_","Scene","selling_price","__","loopRandomTest","main","client1","tradebot","getApiClient","secret_key","client2","catch","err","Error"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export const assert = (name, op, client) => {\n  if (!op)\n    throw 'Assert fail: op is empty'\n\n  console.log(`\nDate: ${(new Date()).toLocaleString()}\nAssertion: ${name}\nClient: ${client.client.key_pair.public_key_hash}\nOp: ${op.operation_id}`)\n\n  return async (equation_fn) => {\n    await new Promise(resolve => {\n      let count = 0\n      const t = setInterval(async () => {\n        console.log('Checking operation_hashes...round ' + count)\n        const ops = JSON.stringify(await client.getHeadCustom('/operation_hashes'))\n        count++\n        const found_it = ops.indexOf(op.operation_id) > -1\n        const timeout = count >= 12\n        if (found_it || timeout) {\n          console.log(`\\x1b[${found_it ? 32 : 31}m%s\\x1b[0m`, found_it ? 'Op found' : 'Timeout')\n          clearInterval(t)\n          resolve()\n        }\n      }, 15 * 1000)\n    })\n\n    if (equation_fn instanceof Function) {\n      console.log('Checking equation...')\n      const result = await equation_fn()\n      console.log(`\\x1b[${result ? 32 : 31}m%s\\x1b[0m`, result ? 'PASS' : 'FAIL')\n\n      if (!result)\n        throw `Assert fail [${name}]` \n    }\n  }\n}","import { assert } from './helper'\n\nconst genPrice = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nconst genTez = (max = 5) => {\n  return parseFloat((Math.random() * max).toFixed(6))\n}\n\nconst genToken = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nexport const cancelOrder = async ({client, token, is_buy, price}) => {\n  const owner = client.client.key_pair.public_key_hash\n  const op = await client.cancelOrder(token, is_buy, price)\n  await assert('Cancel order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == is_buy && x.price == price && x.owner == owner)\n    return !order.length\n  })\n}\n\nexport const createBuyingOrder = async ({client, token, price, tez_amount}) => {\n  price = price || genPrice()\n  tez_amount = tez_amount || genTez()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == true && x.owner == owner && x.price == price)[0]\n  const prev_tez_amount = order ? +order.tez_amount : 0\n\n  const op = await client.createBuying(token, price, tez_amount)\n  await assert('Create buying order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.tez_amount == tez_amount * 1000000 + prev_tez_amount).length\n  )\n\n  return [price, tez_amount]\n}\n\nexport const executeSellingOrder = async ({client, token, price, owner, tez_amount}) => {\n  const orders = await client.getOrders()\n  let prev_token_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == false)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_token_amount = order.token_amount\n    } else {\n      throw 'No selling order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_token_amount = order.token_amount\n    else \n      throw 'No such selling order'\n  }\n\n  tez_amount = tez_amount || genTez(price * prev_token_amount / 1000000)\n\n  const op = await client.executeSelling(token, price, owner, tez_amount)\n  await assert('Execute selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    return Math.floor((tez_amount * 1000000) / price) == prev_token_amount - order.token_amount\n  })\n\n  return [price, owner, prev_token_amount, tez_amount]\n}\n\nexport const executeBuyingOrder = async ({client, token, price, owner, token_amount}) => {\n  const orders = await client.getOrders()\n  let prev_tez_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == true)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_tez_amount = order.tez_amount\n    } else {\n      throw 'No buying order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_tez_amount = order.tez_amount\n    else \n      throw 'No such buying order'\n  }\n\n  token_amount = token_amount || genToken(prev_tez_amount / price)\n\n  const op = await client.executeBuying(token, price, owner, token_amount)\n  await assert('Execute buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    return price * token_amount == prev_tez_amount - order.tez_amount\n  })\n\n  return [price, owner, prev_tez_amount, token_amount]\n}\n\nexport const createSellingOrder = async ({client, token, price, token_amount}) => {\n  price = price || genPrice()\n  token_amount = token_amount || genToken()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == false && x.owner == owner && x.price == price)[0]\n  const prev_token_amount = order ? +order.token_amount : 0\n\n  const op = await client.createSelling(token, price, token_amount)\n  await assert('Create selling order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.token_amount == prev_token_amount + token_amount).length\n  )\n\n  return [price, token_amount]\n}\n\nexport const transferToken = async ({client, token, receiver, token_amount}) => {\n  const sender = client.client.key_pair.public_key_hash\n  receiver = receiver ? receiver.client.key_pair.public_key_hash : sender\n  token_amount = token_amount || genToken()\n\n  const sender_info = await client.getTokenInfo(token, sender)\n  const receiver_info = await client.getTokenInfo(token, receiver)\n\n  const op = await client.tokenTransfer(token, receiver, token_amount)\n  await assert('Transfer token', op, client)(async () => {\n    const new_sender_info = await client.getTokenInfo(token, sender)\n    const new_receiver_info = await client.getTokenInfo(token, receiver)\n\n    if (receiver === sender) {\n      return sender_info.token_amount === receiver_info.token_amount &&\n             sender_info.token_amount === new_sender_info.token_amount &&\n             new_sender_info.token_amount === new_receiver_info.token_amount\n    } else {\n      return sender_info.token_amount - new_sender_info.token_amount === \n             new_receiver_info.token_amount - receiver_info.token_amount\n    }\n  })\n\n  return token_amount\n}\n\nexport const rewardLock = async ({client, token_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const token_info = await client.getTokenInfo(tes_token, pkh)\n  const prev_locked = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  token_amount = token_amount || genToken(token_info.token_amount)\n\n  const op = await client.rewardLock(token_amount)\n  await assert('Lock reward', op, client)(async () => \n    (await client.getRewardInfo(pkh)).locked_amount == +prev_locked + token_amount\n  )\n\n  return token_amount\n}\n\nexport const rewardUnlock = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const prev_token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n  const locked_amount = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  const op = await client.rewardUnlock()\n  await assert('Unlock reward', op, client)(async () => {\n    const token_result = (await client.getTokenInfo(tes_token, pkh)).token_amount == +locked_amount + +prev_token_amount\n    const reward_result =  ((await client.getRewardInfo(pkh)).locked_amount || 0) == 0\n    return token_result && reward_result\n  })\n}\n\nexport const rewardWithdraw = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const reward_kt1 = client.contracts.reward\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n  const reward_info = await client.getRewardInfo(pkh)\n  const locked_amount = reward_info.locked_amount || 0\n  const rewards = reward_info.rewards.filter(x => x.date > reward_info.lock_date)\n  const reward_value = rewards.reduce((acc, x) => Math.floor(locked_amount * x.xtz_amount / 100000000) + acc, 0)\n\n  const op = await client.rewardWithdraw()\n  await assert('Withdraw reward', op, client)(async () => {\n    const curr_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    return curr_xtz == +prev_xtz + reward_value && curr_reward_xtz == +prev_reward_xtz - reward_value\n  })\n}\n\nexport const depositToReward = async ({client, xtz_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const reward_kt1 = client.contracts.reward\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n\n  xtz_amount = xtz_amount || genTez(+prev_xtz / 10 / 1000000)\n  const op = await client.client.transfer({\n    destination: reward_kt1,\n    amount: xtz_amount,\n    parameters: {\n      \"bytes\": \"050505030b\"\n    }\n  })\n  await assert('Deposit to reward contract', op, client)(async () => {\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    const transferred_xtz = xtz_amount * 1000000\n    return curr_reward_xtz == +prev_reward_xtz + transferred_xtz\n  })\n}\n\nexport default {\n  createBuyingOrder,\n  createSellingOrder,\n  executeBuyingOrder,\n  executeSellingOrder,\n  cancelOrder,\n  rewardLock,\n  rewardUnlock,\n  rewardWithdraw,\n  depositToReward,\n  transferToken\n}\n\n  // if (1) {\n  //   // const op = await client1.createBuying(tes_token, 210, 1)\n  //   // const op = await client1.createSelling(tes_token, 342, 100)\n  //   // const op = await client1.executeSelling(tes_token, 231, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 342 * 100 / 1000000)\n  //   const op = await client1.executeBuying(tes_token, 210, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 100)\n  //   // const op = await client1.cancelOrder(tes_token, false, 342)\n  //   // const op = await client1.rewardLock(1000)\n  //   // const op = await client1.rewardUnlock()\n  //   // const op = await client1.rewardWithdraw()\n  //   // const op = await client1.tokenTransfer(tes_token, tes_token, 300)\n  //   console.log(op)\n  // } else {\n  //   // const result = await client1.getTokenInfo(tes_token, pkh)\n  //   // const result = await client1.getOrders()\n  //   // const result = await client1.getRewardInfo(pkh)\n  //   const result = await client1.getHeadCustom('/operation_hashes')\n  //   console.log(result)\n  // }","import tradebot from 'tezexchange-tradebot'\nimport Scene from './scene'\n\nconst roll = () => {\n  return Math.random() > 0.5\n}\n\nconst basicSceneComposition = async ({clients, tes_token}) => {\n  const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n  const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n  await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n  await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n  await Scene.transferToken({client: clients[0], token: tes_token})\n  await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n  await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n  await Scene.rewardLock({client: clients[0]})\n  await Scene.depositToReward({client: clients[0]})\n  await Scene.rewardWithdraw({client: clients[0]})\n  await Scene.rewardUnlock({client: clients[0]})\n}\n\nconst loopRandomTest = async ({clients, tes_token}) => {\n  while (true) {\n    if (roll()) {\n      const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n      if (roll())\n        await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n    }\n    if (roll()) {\n      const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n      if (roll())\n        await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[0], receiver: clients[1], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[1], receiver: clients[0], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.rewardLock({client: clients[0]})\n      if (roll()){\n        await Scene.depositToReward({client: clients[0]})\n        await Scene.rewardWithdraw({client: clients[0]})\n      }\n      else\n        await Scene.rewardUnlock({client: clients[0]})\n    }\n  }\n}\n\nconst main = async () => {\n  const client1 = await tradebot.getApiClient({\n    // host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskRwCM7hMRBCFuqqAwkrvyrMiRNvA5NVjN8Neg9UfT5xUpcSRJQDb8y2HgBvwAzM6Ah9d4ykZ1HgN8N426ZYrntLES5gZv79'\n  })\n  const client2 = await tradebot.getApiClient({\n    secret_key: 'edskSAnVuT9KDLx77DECAWcqocUzE4KerS7WGaUHCVyRWrYk29RHiY5gWZPVa28EPYYbZKPYg8WaSRbvahGbTCQAJFJ31JiFBu'\n  })\n\n  const tes_token = client1.tokens.TES\n\n  // await basicSceneComposition({\n  //   clients: [client1, client2],\n  //   tes_token\n  // })\n\n  await loopRandomTest({\n    clients: [client1, client2],\n    tes_token\n  })\n  \n  console.log('Finish!')\n}\n\nmain().catch(err => {\n  console.log(`\\x1b[31m%s\\x1b[0m`, 'ERR: ' + (err instanceof Error ? err : JSON.stringify(err, null, 2)))\n})\n"]}