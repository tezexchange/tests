{"version":3,"sources":["helper.js","scene.js","index.js"],"names":["assert","name","op","client","console","log","Date","toLocaleString","key_pair","public_key_hash","operation_id","equation_fn","is_timeout","Promise","resolve","count","t","setInterval","ops","JSON","stringify","getHeadCustom","found_it","indexOf","timeout","clearInterval","Function","result","genPrice","max","Math","round","random","genTez","parseFloat","toFixed","genToken","cancelOrder","token","is_buy","price","owner","order","getOrders","filter","x","length","createBuyingOrder","tez_amount","orders","prev_tez_amount","createBuying","executeSellingOrder","prev_token_amount","token_amount","executeSelling","floor","executeBuyingOrder","executeBuying","createSellingOrder","createSelling","transferToken","receiver","sender","sender_info","getTokenInfo","receiver_info","tokenTransfer","new_sender_info","new_receiver_info","rewardLock","pkh","tes_token","tokens","TES","token_info","prev_locked","getRewardInfo","locked_amount","rewardUnlock","prev_locked_amount","token_result","reward_result","rewardWithdraw","reward_kt1","contracts","reward","prev_xtz","balance","prev_reward_xtz","reward_info","rewards","date","lock_date","reward_value","reduce","acc","xtz_amount","curr_xtz","curr_reward_xtz","depositToReward","transfer","destination","amount","parameters","transferred_xtz","roll","basicSceneComposition","clients","buying_price","_","Scene","selling_price","__","loopRandomTest","main","client1","tradebot","getApiClient","host","secret_key","client2","catch","err","Error","stack"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export const assert = (name, op, client) => {\n  if (!op)\n    throw 'Assert fail: op is empty'\n\n  console.log(`\nDate: ${(new Date()).toLocaleString()}\nAssertion: ${name}\nClient: ${client.client.key_pair.public_key_hash}\nOp: ${op.operation_id}`)\n\n  return async (equation_fn) => {\n    let is_timeout = false\n    await new Promise(resolve => {\n      let count = 0\n      const t = setInterval(async () => {\n        console.log('Checking operation_hashes...round ' + count)\n        const ops = JSON.stringify(await client.getHeadCustom('/operation_hashes'))\n        count++\n        const found_it = ops.indexOf(op.operation_id) > -1\n        const timeout = count >= 20\n        if (timeout) is_timeout = true\n\n        if (found_it || timeout) {\n          console.log(`\\x1b[${found_it ? 32 : 31}m%s\\x1b[0m`, found_it ? 'Op found' : 'Timeout')\n          clearInterval(t)\n          resolve()\n        }\n      }, 15 * 1000)\n    })\n\n    if (equation_fn instanceof Function) {\n      console.log('Checking equation...')\n      const result = await equation_fn()\n      console.log(`\\x1b[${result ? 32 : 31}m%s\\x1b[0m`, result ? 'PASS' : 'FAIL')\n\n      if (!result && !is_timeout)\n        throw `Assert fail [${name}]` \n    }\n  }\n}","import { assert } from './helper'\n\nconst genPrice = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nconst genTez = (max = 5) => {\n  return parseFloat((Math.random() * max).toFixed(6))\n}\n\nconst genToken = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nexport const cancelOrder = async ({client, token, is_buy, price}) => {\n  const owner = client.client.key_pair.public_key_hash\n  const op = await client.cancelOrder(token, is_buy, price)\n  await assert('Cancel order', op, client)(async () => {\n    console.log(is_buy, price, owner)\n    const order = (await client.getOrders()).filter(x => x.is_buy == is_buy && x.price == price && x.owner == owner)\n    return !order.length\n  })\n}\n\nexport const createBuyingOrder = async ({client, token, price, tez_amount}) => {\n  price = price || genPrice()\n  tez_amount = tez_amount || genTez()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == true && x.owner == owner && x.price == price)[0]\n  const prev_tez_amount = order ? +order.tez_amount : 0\n\n  const op = await client.createBuying(token, price, tez_amount)\n  await assert('Create buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    console.log(price, tez_amount, prev_tez_amount, order.tez_amount)\n    return order.tez_amount == (Math.round(tez_amount * 1000000) + prev_tez_amount)\n  })\n\n  return [price, tez_amount]\n}\n\nexport const executeSellingOrder = async ({client, token, price, owner, tez_amount}) => {\n  const orders = await client.getOrders()\n  let prev_token_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == false)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_token_amount = order.token_amount\n    } else {\n      throw 'No selling order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_token_amount = order.token_amount\n    else \n      throw 'No such selling order'\n  }\n\n  tez_amount = tez_amount || genTez(price * prev_token_amount / 1000000)\n\n  const op = await client.executeSelling(token, price, owner, tez_amount)\n  await assert('Execute selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    console.log(prev_token_amount, order)\n    return Math.floor((tez_amount * 1000000) / price) == prev_token_amount - order.token_amount\n  })\n\n  return [price, owner, prev_token_amount, tez_amount]\n}\n\nexport const executeBuyingOrder = async ({client, token, price, owner, token_amount}) => {\n  const orders = await client.getOrders()\n  let prev_tez_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == true)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_tez_amount = order.tez_amount\n    } else {\n      throw 'No buying order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_tez_amount = order.tez_amount\n    else \n      throw 'No such buying order'\n  }\n\n  token_amount = token_amount || genToken(prev_tez_amount / price)\n\n  const op = await client.executeBuying(token, price, owner, token_amount)\n  await assert('Execute buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    console.log(prev_tez_amount, order)\n    return price * token_amount == prev_tez_amount - order.tez_amount\n  })\n\n  return [price, owner, prev_tez_amount, token_amount]\n}\n\nexport const createSellingOrder = async ({client, token, price, token_amount}) => {\n  price = price || genPrice()\n  token_amount = token_amount || genToken()\n\n  const owner = client.client.key_pair.public_key_hash\n  const orders = await client.getOrders()\n  const order = orders.filter(x => x.is_buy == false && x.owner == owner && x.price == price)[0]\n  const prev_token_amount = order ? +order.token_amount : 0\n\n  const op = await client.createSelling(token, price, token_amount)\n  await assert('Create selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    console.log(price, prev_token_amount, token_amount, order.token_amount)\n    return order.token_amount == (prev_token_amount + token_amount)\n  })\n\n  return [price, token_amount]\n}\n\nexport const transferToken = async ({client, token, receiver, token_amount}) => {\n  const sender = client.client.key_pair.public_key_hash\n  receiver = receiver ? receiver.client.key_pair.public_key_hash : sender\n  token_amount = token_amount || genToken()\n\n  const sender_info = await client.getTokenInfo(token, sender)\n  const receiver_info = await client.getTokenInfo(token, receiver)\n\n  const op = await client.tokenTransfer(token, receiver, token_amount)\n  await assert('Transfer token', op, client)(async () => {\n    const new_sender_info = await client.getTokenInfo(token, sender)\n    const new_receiver_info = await client.getTokenInfo(token, receiver)\n\n    if (receiver === sender) {\n      return sender_info.token_amount == receiver_info.token_amount &&\n             sender_info.token_amount == new_sender_info.token_amount &&\n             new_sender_info.token_amount == new_receiver_info.token_amount\n    } else {\n      console.log(sender_info.token_amount, new_sender_info.token_amount,\n             new_receiver_info.token_amount, receiver_info.token_amount)\n      return sender_info.token_amount - new_sender_info.token_amount == \n             new_receiver_info.token_amount - receiver_info.token_amount\n    }\n  })\n\n  return token_amount\n}\n\nexport const rewardLock = async ({client, token_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const token_info = await client.getTokenInfo(tes_token, pkh)\n  const prev_locked = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  token_amount = token_amount || genToken(token_info.token_amount)\n\n  const op = await client.rewardLock(token_amount)\n  await assert('Lock reward', op, client)(async () => {\n    const locked_amount = (await client.getRewardInfo(pkh)).locked_amount\n    console.log(locked_amount, prev_locked, token_amount)\n    return locked_amount == +prev_locked + token_amount\n  })\n\n  return token_amount\n}\n\nexport const rewardUnlock = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const tes_token = client.tokens.TES\n  const prev_token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n  const prev_locked_amount = (await client.getRewardInfo(pkh)).locked_amount || 0\n\n  const op = await client.rewardUnlock()\n  await assert('Unlock reward', op, client)(async () => {\n    const token_amount = (await client.getTokenInfo(tes_token, pkh)).token_amount\n    const token_result = token_amount == +prev_locked_amount + +prev_token_amount\n    const locked_amount = (await client.getRewardInfo(pkh)).locked_amount\n    const reward_result =  (locked_amount || 0) == 0\n    console.log(token_amount, locked_amount, prev_token_amount, prev_locked_amount, locked_amount)\n    return token_result && reward_result\n  })\n}\n\nexport const rewardWithdraw = async ({client}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const reward_kt1 = client.contracts.reward\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n  const reward_info = await client.getRewardInfo(pkh)\n  const locked_amount = reward_info.locked_amount || 0\n  const rewards = reward_info.rewards.filter(x => x.date > reward_info.lock_date)\n  const reward_value = rewards.reduce((acc, x) => Math.floor(locked_amount * x.xtz_amount / 100000000) + acc, 0)\n\n  const op = await client.rewardWithdraw()\n  await assert('Withdraw reward', op, client)(async () => {\n    const curr_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    console.log(curr_xtz, prev_xtz, reward_value, curr_reward_xtz, prev_reward_xtz, reward_value)\n    return curr_xtz == +prev_xtz + reward_value && curr_reward_xtz == +prev_reward_xtz - reward_value\n  })\n}\n\nexport const depositToReward = async ({client, xtz_amount}) => {\n  const pkh = client.client.key_pair.public_key_hash\n  const prev_xtz = (await client.getHeadCustom('/context/contracts/' + pkh)).balance\n  const reward_kt1 = client.contracts.reward\n  const prev_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n\n  xtz_amount = xtz_amount || genTez(+prev_xtz / 10 / 1000000)\n  const op = await client.client.transfer({\n    destination: reward_kt1,\n    amount: xtz_amount,\n    parameters: {\n      \"bytes\": \"050505030b\"\n    }\n  })\n  await assert('Deposit to reward contract', op, client)(async () => {\n    const curr_reward_xtz = (await client.getHeadCustom('/context/contracts/' + reward_kt1)).balance\n    const transferred_xtz = Math.round(xtz_amount * 1000000)\n    console.log(curr_reward_xtz, prev_reward_xtz, transferred_xtz)\n    return curr_reward_xtz == +prev_reward_xtz + transferred_xtz\n  })\n}\n\nexport default {\n  createBuyingOrder,\n  createSellingOrder,\n  executeBuyingOrder,\n  executeSellingOrder,\n  cancelOrder,\n  rewardLock,\n  rewardUnlock,\n  rewardWithdraw,\n  depositToReward,\n  transferToken\n}\n\n  // if (1) {\n  //   // const op = await client1.createBuying(tes_token, 210, 1)\n  //   // const op = await client1.createSelling(tes_token, 342, 100)\n  //   // const op = await client1.executeSelling(tes_token, 231, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 342 * 100 / 1000000)\n  //   const op = await client1.executeBuying(tes_token, 210, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 100)\n  //   // const op = await client1.cancelOrder(tes_token, false, 342)\n  //   // const op = await client1.rewardLock(1000)\n  //   // const op = await client1.rewardUnlock()\n  //   // const op = await client1.rewardWithdraw()\n  //   // const op = await client1.tokenTransfer(tes_token, tes_token, 300)\n  //   console.log(op)\n  // } else {\n  //   // const result = await client1.getTokenInfo(tes_token, pkh)\n  //   // const result = await client1.getOrders()\n  //   // const result = await client1.getRewardInfo(pkh)\n  //   const result = await client1.getHeadCustom('/operation_hashes')\n  //   console.log(result)\n  // }","import tradebot from 'tezexchange-tradebot'\nimport Scene from './scene'\n\nconst roll = () => {\n  return Math.random() > 0.5\n}\n\nconst basicSceneComposition = async ({clients, tes_token}) => {\n  const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n  const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n  await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n  await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n  await Scene.transferToken({client: clients[0], token: tes_token})\n  await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n  await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n  await Scene.rewardLock({client: clients[0]})\n  await Scene.depositToReward({client: clients[0]})\n  await Scene.rewardWithdraw({client: clients[0]})\n  await Scene.rewardUnlock({client: clients[0]})\n}\n\nconst loopRandomTest = async ({clients, tes_token}) => {\n  while (true) {\n    if (roll()) {\n      const [buying_price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n      if (roll())\n        await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price: buying_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[1], token: tes_token, price: buying_price, is_buy: true})\n    }\n    if (roll()) {\n      const [selling_price, __] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n      if (roll())\n        await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price: selling_price, token: tes_token})\n\n      if (roll())\n        await Scene.cancelOrder({client: clients[0], token: tes_token, price: selling_price, is_buy: false})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[0], receiver: clients[1], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.transferToken({client: clients[1], receiver: clients[0], token: tes_token})\n    }\n\n    if (roll()) {\n      await Scene.rewardLock({client: clients[0]})\n      if (roll()){\n        await Scene.depositToReward({client: clients[0]})\n        await Scene.rewardWithdraw({client: clients[0]})\n      }\n      else\n        await Scene.rewardUnlock({client: clients[0]})\n    }\n  }\n}\n\nconst main = async () => {\n  const client1 = await tradebot.getApiClient({\n    host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskRcaftjFf9dL6cGTxJjEmruWQghY3FQzfqWoLuXU8DudrpeKhJH1ZSdtAQfQVMQreTizRaMyT8dLVFsi4dERFi7RLjij4QR'\n  })\n  const client2 = await tradebot.getApiClient({\n    host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskSAdL2Gdc7uMkvGZo5mm2CCzkDofWnwnvbSJbrTPzESaZTruCM8XHanMEUrJygUYaqS7NCFZ9dku4uZVbNAWUgQJZRV7NHj'\n  })\n\n  const tes_token = client1.tokens.TES\n\n  // await basicSceneComposition({\n  //   clients: [client1, client2],\n  //   tes_token\n  // })\n\n  await loopRandomTest({\n    clients: [client1, client2],\n    tes_token\n  })\n  \n  console.log('Finish!')\n}\n\nmain().catch(err => {\n  console.log(`\\x1b[31m%s\\x1b[0m`, 'ERR: ' + (err instanceof Error ? err.stack : JSON.stringify(err, null, 2)))\n})\n"]}