{"version":3,"sources":["helper.js","scene.js","index.js"],"names":["assert","name","op","client","console","log","key_pair","public_key_hash","operation_id","equation_fn","Promise","resolve","count","t","setInterval","ops","JSON","stringify","getHeadCustom","found_it","indexOf","timeout","clearInterval","Function","result","toString","genPrice","max","Math","round","random","genTez","parseFloat","toFixed","genToken","createBuyingOrder","token","price","tez_amount","createBuying","getOrders","filter","x","length","executeSellingOrder","owner","orders","prev_token_amount","order","is_buy","token_amount","executeSelling","floor","executeBuyingOrder","prev_tez_amount","executeBuying","createSellingOrder","createSelling","transferToken","receiver","sender","sender_info","getTokenInfo","receiver_info","tokenTransfer","new_sender_info","new_receiver_info","basicSceneComposition","clients","tes_token","_","Scene","main","client1","tradebot","getApiClient","secret_key","client2","tokens","TES","catch","err","Error"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["export const assert = (name, op, client) => {\n  if (!op)\n    throw 'Assert fail: op is empty'\n\n  console.log(`\nAssertion: ${name}\nClient: ${client.client.key_pair.public_key_hash}\nOp: ${op.operation_id}`)\n\n  return async (equation_fn) => {\n    await new Promise(resolve => {\n      let count = 0\n      const t = setInterval(async () => {\n        console.log('Checking operation_hashes...round ' + count)\n        const ops = JSON.stringify(await client.getHeadCustom('/operation_hashes'))\n        count++\n        const found_it = ops.indexOf(op.operation_id) > -1\n        const timeout = count >= 5\n        if (found_it || timeout) {\n          console.log(`\\x1b[${found_it ? 32 : 31}m%s\\x1b[0m`, found_it ? 'Op found' : 'Timeout')\n          clearInterval(t)\n          resolve()\n        }\n      }, 25 * 1000)\n    })\n\n    if (equation_fn instanceof Function) {\n      console.log('Checking equation...')\n      const result = await equation_fn()\n      console.log(`\\x1b[${result ? 32 : 31}m%s\\x1b[0m`, result ? 'PASS' : 'FAIL')\n\n      if (!result)\n        throw `Assert fail [${name}] @ \n${equation_fn.toString()}\n      ` \n    }\n  }\n}","import { assert } from './helper'\n\nconst genPrice = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nconst genTez = (max = 5) => {\n  return parseFloat((Math.random() * max).toFixed(6))\n}\n\nconst genToken = (max = 1000) => {\n  return Math.round(Math.random() * max)\n}\n\nexport const createBuyingOrder = async ({client, token, price, tez_amount}) => {\n  price = price || genPrice()\n  tez_amount = tez_amount || genTez()\n\n  const op = await client.createBuying(token, price, tez_amount)\n  await assert('Create buying order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.price == price && x.tez_amount == tez_amount * 1000000).length\n  )\n\n  return [price, tez_amount]\n}\n\nexport const executeSellingOrder = async ({client, token, price, owner, tez_amount}) => {\n  const orders = await client.getOrders()\n  let prev_token_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == false)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_token_amount = order.token_amount\n    } else {\n      throw 'No selling order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    console.log(price, owner, orders)\n    const order = orders.filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_token_amount = order.token_amount\n    else \n      throw 'No such selling order'\n  }\n\n  tez_amount = tez_amount || genTez(price * prev_token_amount / 1000000)\n\n  const op = await client.executeSelling(token, price, owner, tez_amount)\n  await assert('Execute selling order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == false && x.price == price && x.owner == owner)[0]\n    return Math.floor((tez_amount * 1000000) / price) == prev_token_amount - order.token_amount\n  })\n\n  return [price, owner, prev_token_amount, tez_amount]\n}\n\nexport const executeBuyingOrder = async ({client, token, price, owner, token_amount}) => {\n  const orders = await client.getOrders()\n  let prev_tez_amount = ''\n\n  if (!price || !owner) {\n    const order = orders.filter(x => x.is_buy == true)[0]\n    if (order) {\n      price = order.price\n      owner = order.owner\n      prev_tez_amount = order.tez_amount\n    } else {\n      throw 'No buying order to be executed'\n    }\n  } else {\n    owner = owner.client.key_pair.public_key_hash\n    const order = orders.filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    if (order)\n      prev_tez_amount = order.tez_amount\n    else \n      throw 'No such buying order'\n  }\n\n  token_amount = token_amount || genToken(prev_tez_amount / price)\n\n  const op = await client.executeBuying(token, price, owner, token_amount)\n  await assert('Execute buying order', op, client)(async () => {\n    const order = (await client.getOrders()).filter(x => x.is_buy == true && x.price == price && x.owner == owner)[0]\n    return price * token_amount == prev_tez_amount - order.tez_amount\n  })\n\n  return [price, owner, prev_tez_amount, token_amount]\n}\n\nexport const createSellingOrder = async ({client, token, price, token_amount}) => {\n  price = price || genPrice()\n  token_amount = token_amount || genToken()\n\n  const op = await client.createSelling(token, price, token_amount)\n  await assert('Create selling order', op, client)(async () => \n    (await client.getOrders()).filter(x => x.price == price && x.token_amount == token_amount).length\n  )\n\n  return [price, token_amount]\n}\n\nexport const transferToken = async ({client, token, receiver, token_amount}) => {\n  const sender = client.client.key_pair.public_key_hash\n  receiver = receiver ? receiver.client.key_pair.public_key_hash : sender\n  token_amount = token_amount || genToken()\n\n  const sender_info = await client.getTokenInfo(token, sender)\n  const receiver_info = await client.getTokenInfo(token, receiver)\n\n  const op = await client.tokenTransfer(token, receiver, token_amount)\n  await assert('Transfer token', op, client)(async () => {\n    const new_sender_info = await client.getTokenInfo(token, sender)\n    const new_receiver_info = await client.getTokenInfo(token, receiver)\n\n    if (receiver === sender) {\n      return sender_info.token_amount === receiver_info.token_amount &&\n             sender_info.token_amount === new_sender_info.token_amount &&\n             new_sender_info.token_amount === new_receiver_info.token_amount\n    } else {\n      return sender_info.token_amount - new_sender_info.token_amount === \n             new_receiver_info.token_amount - receiver_info.token_amount\n    }\n  })\n\n  return token_amount\n}\n\n\nexport default {\n  createBuyingOrder,\n  createSellingOrder,\n  executeBuyingOrder,\n  executeSellingOrder,\n  transferToken\n}\n\n  // if (1) {\n  //   // const op = await client1.createBuying(tes_token, 210, 1)\n  //   // const op = await client1.createSelling(tes_token, 342, 100)\n  //   // const op = await client1.executeSelling(tes_token, 231, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 342 * 100 / 1000000)\n  //   const op = await client1.executeBuying(tes_token, 210, 'tz1UJPFiywU6uGeMpZnPrY4w7zNhLekvJaUo', 100)\n  //   // const op = await client1.cancelOrder(tes_token, false, 342)\n  //   // const op = await client1.rewardLock(1000)\n  //   // const op = await client1.rewardUnlock()\n  //   // const op = await client1.rewardWithDraw()\n  //   // const op = await client1.tokenTransfer(tes_token, tes_token, 300)\n  //   console.log(op)\n  // } else {\n  //   // const result = await client1.getTokenInfo(tes_token, pkh)\n  //   // const result = await client1.getOrders()\n  //   // const result = await client1.getRewardInfo(pkh)\n  //   const result = await client1.getHeadCustom('/operation_hashes')\n  //   console.log(result)\n  // }","import tradebot from 'tezexchange-tradebot'\nimport Scene from './scene'\n\nconst basicSceneComposition = async ({clients, tes_token}) => {\n  // const [price, _] = await Scene.createBuyingOrder({client: clients[1], token: tes_token})\n  const [price, _] = await Scene.createSellingOrder({client: clients[0], token: tes_token})\n  // await Scene.executeBuyingOrder({client: clients[0], owner: clients[1], price, token: tes_token})\n  await Scene.executeSellingOrder({client: clients[1], owner: clients[0], price, token: tes_token})\n  // await Scene.transferToken({client: clients[0], token: tes_token})\n}\n\nconst main = async () => {\n  const client1 = await tradebot.getApiClient({\n    // host: 'https://znetrpc.tezbox.com',\n    secret_key: 'edskRwCM7hMRBCFuqqAwkrvyrMiRNvA5NVjN8Neg9UfT5xUpcSRJQDb8y2HgBvwAzM6Ah9d4ykZ1HgN8N426ZYrntLES5gZv79'\n  })\n  const client2 = await tradebot.getApiClient({\n    secret_key: 'edskSAnVuT9KDLx77DECAWcqocUzE4KerS7WGaUHCVyRWrYk29RHiY5gWZPVa28EPYYbZKPYg8WaSRbvahGbTCQAJFJ31JiFBu'\n  })\n\n  const tes_token = client1.tokens.TES\n\n  await basicSceneComposition({\n    clients: [client1, client2],\n    tes_token\n  })\n\n  console.log('Finish!')\n}\n\nmain().catch(err => {\n  console.log(`\\x1b[31m%s\\x1b[0m`, 'ERR: ' + (err instanceof Error ? err : JSON.stringify(err, null, 2)))\n})\n"]}